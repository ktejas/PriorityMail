<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>waveCount = 0;
maxWaveDelay = 15;
numberOfElementsToSpawn = 1;
numberOfWavesForIncrementalEnemies = 15;
numberOFwavesFaced = 0;
globalvar totalNumberOfElements;

globalvar prioryTruckNumber;
globalvar numOfPriorityMailsSorted;
globalvar maxPMailsToBeSorted;
prioryTruckNumber  = "Red";
numOfPriorityMailsSorted = 0;
maxPMailsToBeSorted = 5;
totalNumberOfElements = 0;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>waveCount++;
if(totalNumberOfElements &gt;= 200 )
return 0;
if(waveCount &gt; maxWaveDelay)
{
waveCount = 0;
numberOFwavesFaced++;
for (i = 0 ; i &lt; numberOfElementsToSpawn;i++)
{
totalNumberOfElements++;
objectRange = floor(random_range(1,4));
laneRange = floor(random_range(0,4));
positionY = 80 + laneRange * 160;
switch (objectRange)
{
case 1 : 
{
instance_create(0,positionY,mailBoxRed_Obj);
break;
}
case 2 : 
{
instance_create(0,positionY,mailBoxBlue_obj);
break;
}
case 3 : 
{
instance_create(0,positionY,mailBoxGreen_obj);
break;
}
}
}
if(numberOFwavesFaced % numberOfWavesForIncrementalEnemies == 0)
numberOfElementsToSpawn++;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
